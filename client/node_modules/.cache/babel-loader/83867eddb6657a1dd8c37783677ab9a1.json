{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oliver\\\\Documents\\\\Code\\\\PWA\\\\client\\\\src\\\\components\\\\FapCount.jsx\";\nimport React, { useState, useEffect } from 'react';\nexport default function FapCount() {\n  const [fap, setFap] = useState([]);\n  useEffect(() => {\n    fetch('/api/fapcount').then(res => res.json()).then(data => setFap(data));\n  }, [fap]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, fap.map(fap => /*#__PURE__*/React.createElement(\"li\", {\n    key: fap.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, fap.count))));\n}","map":{"version":3,"sources":["C:/Users/Oliver/Documents/Code/PWA/client/src/components/FapCount.jsx"],"names":["React","useState","useEffect","FapCount","fap","setFap","fetch","then","res","json","data","map","id","count"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,eAAe,SAASC,QAAT,GAAoB;AAC/B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAC,EAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAAC,eAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAIL,MAAM,CAACK,IAAD,CAFxB;AAGH,GAJQ,EAIN,CAACN,GAAD,CAJM,CAAT;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,GAAG,CAACO,GAAJ,CAAQP,GAAG,iBACR;AAAI,IAAA,GAAG,EAAEA,GAAG,CAACQ,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBR,GAAG,CAACS,KAAtB,CADH,CADL,CADJ,CADJ;AASH","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nexport default function FapCount() {\r\n    const [fap, setFap] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch('/api/fapcount')\r\n            .then(res => res.json())\r\n            .then(data => setFap(data))\r\n    }, [fap])\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {fap.map(fap => \r\n                    <li key={fap.id}>{fap.count}</li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}